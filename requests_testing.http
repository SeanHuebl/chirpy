// codespaces testing
### Admin reset (optional, if required to initialize state)
POST https://urban-space-parakeet-jw5w77vvprw2p4q5-8080.app.github.dev/admin/reset HTTP/1.1
Content-Type: application/json

### Create a user
# @name user
POST https://urban-space-parakeet-jw5w77vvprw2p4q5-8080.app.github.dev/api/users HTTP/1.1
Content-Type: application/json

{
  "password": "!Password1",
  "email": "lane@example.com"
}

### Extract userID from the previous response
@userID={{user.response.body.id}}

### Create a chirp using the extracted userID
POST https://urban-space-parakeet-jw5w77vvprw2p4q5-8080.app.github.dev/api/chirps HTTP/1.1
Content-Type: application/json

{
  "body": "Hello, world!",
  "user_id": "{{userID}}"
}

### Create a chirp using the extracted userID
# @name chirp
POST https://urban-space-parakeet-jw5w77vvprw2p4q5-8080.app.github.dev/api/chirps HTTP/1.1
Content-Type: application/json

{
  "body": "Hello, universe!!",
  "user_id": "{{userID}}"
}
###
@chirpid={{chirp.response.body.id}}

### Correct pwd

POST https://urban-space-parakeet-jw5w77vvprw2p4q5-8080.app.github.dev/api/login HTTP/1.1
Content-Type: application/json

{
  "password": "!Password1",
  "email": "lane@example.com"
}

### Incorrect pwd

POST https://urban-space-parakeet-jw5w77vvprw2p4q5-8080.app.github.dev/api/login HTTP/1.1
Content-Type: application/json

{
  "password": "!Password2",
  "email": "lane@example.com"
}

### Incorrect email

POST https://urban-space-parakeet-jw5w77vvprw2p4q5-8080.app.github.dev/api/login HTTP/1.1
Content-Type: application/json

{
  "password": "!Password1",
  "email": "lane@example.org"
}

###

GET https://urban-space-parakeet-jw5w77vvprw2p4q5-8080.app.github.dev/api/chirps HTTP/1.1
Content-Type: application/json
###
GET https://urban-space-parakeet-jw5w77vvprw2p4q5-8080.app.github.dev/api/chirps/{{chirpid}} HTTP/1.1
Content-Type: application/json
###
// local machine testing
POST http://localhost:8080/api/validate_chirp HTTP/1.1
content-type: application/json

{
  "body": "This is a kerfuffle opinion I need to share with the world"
}

###
# @name lhuser
POST http://localhost:8080/api/users HTTP/1.1
content-type: application/json

{
  "password": "!Password1",
  "email": "lane@example.com"
}
### Exctract localhost userID
@lhuserID={{lhuser.response.body.id}}

###
# @name login
POST http://localhost:8080/api/login HTTP/1.1
content-type: application/json

{
  "password": "!Password1",
  "email": "lane@example.com"
}
###
@JWT=Bearer {{login.response.body.token}}
@refresh=Bearer {{login.response.body.refresh_token}}
###
POST http://localhost:8080/admin/reset HTTP/1.1
content-type: application/json

###
POST http://localhost:8080/api/chirps HTTP/1.1
content-type: application/json
Authorization: {{JWT}}

{
  "body": "Hello, world!",
  "user_id": "{{lhuserID}}"
}
###
POST http://localhost:8080/api/refresh HTTP/1.1
content-type: application/json
Authorization: {{refresh}}

###
POST http://localhost:8080/api/revoke HTTP/1.1
content-type: application/json
Authorization: {{refresh}}